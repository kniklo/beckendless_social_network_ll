require.config({paths:{sdk:uiBuilderSDKPath+"/sdk"}}),define(["sdk"],(e=>e.startApp())),define("./pages/404/components/page/bundle.js",[],(()=>({async onEnter(e){e.context.pageData.error=null,e.context.pageData.user=await async function(e){var a=`${(await Backendless.UserService.describeUserClass()).find((e=>e.identity)).name} = '${e}'`,t=Backendless.DataQueryBuilder.create().setWhereClause(a);return(await Backendless.Data.of(Backendless.User).find(t))[0]}(e.context.pageData.userIdentity)}}))),define("./pages/404/components/3665111f5a5b9f8f4b064bbdf6ce7a5c/bundle.js",[],(()=>({async onClick(e){await async function(e,a){BackendlessUI.goToPage("",null)}()}}))),define("./pages/change-password/components/page/bundle.js",[],(()=>({onEnter(e){e.context.pageData.error=null,e.context.pageData.result=null}}))),define("./pages/change-password/components/58ecb77e91b7d9dd5c99075111c91c64/bundle.js",[],(()=>({async onSubmit(e){var a;if(e.context.pageData.result="",e.context.pageData.error="",e.context.dataModel.password==e.context.dataModel.confirm_password)try{e.context.pageData.result=await Backendless.Request.post(function(e){if(!e)throw new Error("Url must be specified.");return e.startsWith("http://")||e.startsWith("https://")?e:"https://"+e}([Backendless.appPath,"/change_password/",e.context.pageData.token].join(""))).setEncoding("utf8").send({password:e.context.dataModel.password})}catch(a){e.context.pageData.error="string"==typeof a.message?a.message:a}else e.context.pageData.error="Passwords do not match"}}))),define("./pages/change-password/components/9c0e75137e04bad6e50940e30ee54426/bundle.js",[],(()=>({onChange(e){e.context.pageData.error=null,e.context.pageData.result=null}}))),define("./pages/change-password/components/1e3bdf67c1f295ed344408cd7f1dba1d/bundle.js",[],(()=>({onChange(e){e.context.pageData.error=null,e.context.pageData.result=null}}))),define("./pages/logged-in/components/page/bundle.js",[],(()=>({async onEnter(e){e.context.appData.currenUser||(e.context.appData.currenUser=await Backendless.UserService.getCurrentUser()),e.context.appData.currenUser||await async function(e,a){BackendlessUI.goToPage("login",null)}()}}))),define("./pages/login/components/85dae34486144e2efa2d934bfdddb172/bundle.js",[],(()=>({async onSubmit(e){var a,t,n,s,o,r,c,d,i,g,l,p,u,f;async function x(){try{i=await Backendless.UserService.login(g,n,d)}catch(e){await D(e)}}function b(e,a){if("string"!=typeof a||void 0!==e[a])return e[a];const t=a.split(".");let n=e;for(let e=0;e<t.length;e++){if(!n||void 0===n[t[e]])return;n=n[t[e]]}return n}async function D(a){e.context.getComponentDataStoreByUid("85dae34486144e2efa2d934bfdddb172").error=a}async function w(t){(a=e.context.getComponentByUid("db5546014b7940ad8771a98d85f83036")).label=t?"Please wait...":"Login",a.disabled=t}if(r=b(e.context.pageData,"redirectToUrl"),o=b(e.context.pageData,"redirectToPageName"),s=b(e.context.pageData,"redirectData"),c=b(e.context.pageData,"sendUserTokenAndId"),await D(null),g=b(e.context.dataModel,"username"),n=b(e.context.dataModel,"password"),d=b(e.context.dataModel,"stayLoggedIn"),g&&n){await w(!0);try{await x()}catch(t){3033==b(t,"code")?await x():await D(t)}finally{await w(!1)}}else await D(new Error("Username and Password must be filled"));i&&(e.context.appData.currentUser=i,r?(u=r,f=c?{userToken:b(i,"user-token"),userId:b(i,"objectId"),stayLoggedIn:d}:"",BackendlessUI.Navigator.openWebPage(u,!1,f)):o?(l=o,p=s?JSON.parse(s):null,BackendlessUI.Navigator.goToPage(l,p)):function(e,a){BackendlessUI.Navigator.goToPage("logged-in",a)}(0,void 0))}}))),define("./pages/login/components/page/bundle.js",[],(()=>({async onEnter(e){var a,t,n,s,o,r,c,d,i;function g(e,a){if("string"!=typeof a||void 0!==e[a])return e[a];const t=a.split(".");let n=e;for(let e=0;e<t.length;e++){if(!n||void 0===n[t[e]])return;n=n[t[e]]}return n}o=g(e.context.appData,"currentUser")?g(e.context.appData,"currentUser"):await Backendless.UserService.getCurrentUser(!1),s=g(e.context.pageData,"redirectToUrl"),t=g(e.context.pageData,"redirectToPageName"),a=g(e.context.pageData,"redirectData"),n=g(e.context.pageData,"sendUserTokenAndId"),o&&(s?(d=s,i=n?{userToken:await async function(){return Backendless.UserService.getCurrentUserToken()}(),userId:g(o,"objectId"),stayLoggedIn:!0}:"",BackendlessUI.Navigator.openWebPage(d,!1,i)):t?(r=t,c=a?JSON.parse(a):null,BackendlessUI.Navigator.goToPage(r,c)):function(e,a){BackendlessUI.Navigator.goToPage("logged-in",a)}(0,void 0))}})));
//# sourceMappingURL=./main.js.map